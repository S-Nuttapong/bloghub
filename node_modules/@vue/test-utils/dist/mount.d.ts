import { VNode, FunctionalComponent, ComponentPublicInstance, ComponentOptionsWithObjectProps, ComponentOptionsWithArrayProps, ComponentOptionsWithoutProps, ExtractPropTypes, Component } from 'vue';
import { GlobalMountOptions } from './types';
import { VueWrapper } from './vue-wrapper';
declare type Slot = VNode | string | {
    render: Function;
} | Function;
declare type SlotDictionary = {
    [key: string]: Slot;
};
interface MountingOptions<Props> {
    data?: () => Record<string, unknown>;
    props?: Props;
    attrs?: Record<string, unknown>;
    slots?: SlotDictionary & {
        default?: Slot;
    };
    global?: GlobalMountOptions;
    attachTo?: HTMLElement | string;
    shallow?: boolean;
}
declare type ExtractComponent<T> = T extends {
    new (): infer PublicInstance;
} ? PublicInstance : any;
export declare function mount<TestedComponent extends FunctionalComponent>(originalComponent: TestedComponent, options?: MountingOptions<any>): VueWrapper<ComponentPublicInstance>;
export declare function mount<TestedComponent extends ComponentPublicInstance>(originalComponent: {
    new (): TestedComponent;
} & Component, options?: MountingOptions<TestedComponent['$props']>): VueWrapper<TestedComponent>;
export declare function mount<TestedComponent extends ComponentOptionsWithObjectProps>(originalComponent: TestedComponent, options?: MountingOptions<ExtractPropTypes<TestedComponent['props'], false>>): VueWrapper<ExtractComponent<TestedComponent>>;
export declare function mount<TestedComponent extends ComponentOptionsWithArrayProps>(originalComponent: TestedComponent, options?: MountingOptions<Record<string, any>>): VueWrapper<ExtractComponent<TestedComponent>>;
export declare function mount<TestedComponent extends ComponentOptionsWithoutProps, ComponentT extends ComponentOptionsWithoutProps & {}>(originalComponent: ComponentT extends {
    new (): any;
} ? never : ComponentT, options?: MountingOptions<never>): VueWrapper<ExtractComponent<TestedComponent>>;
export declare function shallowMount(originalComponent: any, options?: MountingOptions<any>): VueWrapper<ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}>>;
export {};
