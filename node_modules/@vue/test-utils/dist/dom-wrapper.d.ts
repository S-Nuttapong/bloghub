import { nextTick } from 'vue';
import { TriggerOptions } from './create-dom-event';
export declare class DOMWrapper<ElementType extends Element> {
    element: ElementType;
    constructor(element: ElementType);
    classes(className?: string): boolean | string[];
    attributes(key?: string): any;
    exists(): boolean;
    text(): string;
    html(): string;
    find<K extends keyof HTMLElementTagNameMap>(selector: K): DOMWrapper<HTMLElementTagNameMap[K]>;
    find<K extends keyof SVGElementTagNameMap>(selector: K): DOMWrapper<SVGElementTagNameMap[K]>;
    find<T extends Element>(selector: string): DOMWrapper<T>;
    get<K extends keyof HTMLElementTagNameMap>(selector: K): DOMWrapper<HTMLElementTagNameMap[K]>;
    get<K extends keyof SVGElementTagNameMap>(selector: K): DOMWrapper<SVGElementTagNameMap[K]>;
    get<T extends Element>(selector: string): DOMWrapper<T>;
    findAll<K extends keyof HTMLElementTagNameMap>(selector: K): DOMWrapper<HTMLElementTagNameMap[K]>[];
    findAll<K extends keyof SVGElementTagNameMap>(selector: K): DOMWrapper<SVGElementTagNameMap[K]>[];
    findAll<T extends Element>(selector: string): DOMWrapper<T>[];
    private setChecked;
    setValue(value?: any): Promise<typeof nextTick>;
    private setSelected;
    trigger(eventString: string, options?: TriggerOptions): Promise<typeof nextTick>;
}
